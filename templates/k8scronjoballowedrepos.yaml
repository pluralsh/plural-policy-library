apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8scronjoballowedrepos
spec:
  crd:
    spec:
      names:
        kind: K8sCronJobAllowedRepos
      validation:
        legacySchema: false
        openAPIV3Schema:
          properties:
            repos:
              description: The list of prefixes a container image is allowed to have.
              items:
                type: string
              type: array
          type: object
  targets:
  - rego: |
      package k8scronjoballowedrepos

      import future.keywords.in

      violation[{"msg": msg}] {
        allowedRepos := object.get(input, ["parameters", "repos"], set())

        some container in input.review.object.spec.jobTemplate.spec.template.spec.containers
        not strings.any_prefix_match(container.image, allowedRepos)
        msg := sprintf(
          "container <%v> has an invalid image repo <%v>, allowed repos are %v",
          [container.name, container.image, allowedRepos],
        )
      }
    target: admission.k8s.gatekeeper.sh
