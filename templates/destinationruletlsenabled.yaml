apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: destinationruletlsenabled
spec:
  crd:
    spec:
      names:
        kind: DestinationRuleTLSEnabled
      validation:
        legacySchema: false
  targets:
  - rego: |
      package asm.guardrails.destinationruletlsenabled

      # spec.trafficPolicy.tls.mode == DISABLE
      violation[{"msg": msg}] {
        d := input.review.object

        startswith(d.apiVersion, "networking.istio.io/")
        d.kind == "DestinationRule"

        tpl := d.spec.trafficPolicy[_]

        tpl == {"mode": "DISABLE"}

        msg := sprintf("spec.trafficPolicy.tls.mode == DISABLE for host(s): %v", [d.spec.host])
      }

      # spec.subsets[].trafficPolicy.tls.mode == DISABLE
      violation[{"msg": msg}] {
        d := input.review.object

        startswith(d.apiVersion, "networking.istio.io/")
        d.kind == "DestinationRule"

        subset := d.spec.subsets[_]
        subset.trafficPolicy == {"tls": {"mode": "DISABLE"}}

        msg := sprintf("subsets[].trafficPolicy.tls.mode == DISABLE for host-subset: %v-%v", [d.spec.host, subset.name])
      }
    target: admission.k8s.gatekeeper.sh
