apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: disallowedauthzprefix
spec:
  crd:
    spec:
      names:
        kind: DisallowedAuthzPrefix
      validation:
        legacySchema: false
        openAPIV3Schema:
          properties:
            disallowedprefixes:
              description: Disallowed prefixes of principals and namespaces.
              items:
                type: string
              type: array
          type: object
  targets:
  - rego: |
      package asm.guardrails.disallowedauthzprefix

      violation[{"msg": msg}] {
        p := input.review.object

        startswith(p.apiVersion, "security.istio.io/")
        p.kind == "AuthorizationPolicy"

        rule := p.spec.rules[_]
        from := rule.from[_]

        principal := from.source.principals[_]
        parts := split(principal, "/")

        badprefix := input.parameters.disallowedprefixes[_]

        # check the final component of source.principals, the service account name
        startswith(parts[count(parts) - 1], badprefix)

        msg := sprintf("source.principals '%v' cannot begin with '%v'", [principal, badprefix])
      }

      violation[{"msg": msg}] {
        p := input.review.object

        startswith(p.apiVersion, "security.istio.io/")
        p.kind == "AuthorizationPolicy"

        rule := p.spec.rules[_]
        from := rule.from[_]

        namespace := from.source.namespaces[_]

        badprefix := input.parameters.disallowedprefixes[_]
        startswith(namespace, badprefix)

        msg := sprintf("source.namespaces '%v' cannot begin with '%v'", [namespace, badprefix])
      }
    target: admission.k8s.gatekeeper.sh
